@using Kolpi.WebShared.ViewModels

@inject TooltipService tooltipService

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" class="rz-p-4">

    <RadzenCheckBox Name="@TextInputLabel" @bind-Value=@AnswerModel.IsAnswer MouseEnter="@(args => ShowTooltip(args, new TooltipOptions(){ Position = TooltipPosition.Top }))" />
    <RadzenLabel Text="Answer" Component="@TextInputLabel" Style="margin-left:-12px;"/>

    @if (selectedAnsType == ansTypes[0])
    {
        <RadzenFormField Text="@TextInputLabel" Style="width: 100%;" Variant="Variant.Outlined">
            <RadzenTextBox @bind-Value="@AnswerModel.Body" Style="width: 100%;" />
        </RadzenFormField>
    }
    else if (selectedAnsType == ansTypes[1])
    {
        <RadzenFormField Text="@TextInputLabel" Style="width: 100%;">
            <RadzenTextArea @bind-Value="@AnswerModel.Body" Style="width: 100%;" Rows="3" />
        </RadzenFormField>
    }
    else if (selectedAnsType == ansTypes[2])
    {
        <RadzenFileInput TValue="string" Style="width: 100%;" ChooseText="Select image" />
    }
    else if (selectedAnsType == ansTypes[3])
    {
        <RadzenFileInput TValue="string" Style="width: 100%;" Accept="audio/*" ChooseText="Select audio file" />
    }
    else if (selectedAnsType == ansTypes[4])
    {
        <RadzenFileInput TValue="string" Style="width: 100%;" Accept="video/*" ChooseText="Select video file" />
    }


    <RadzenFormField Variant="@Variant.Outlined">
        <RadzenDropDown Data=@ansTypes @bind-Value="@selectedAnsType" Style="width:100px;" />
    </RadzenFormField>

    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="RemoveItem" class="rz-mt-2"></RadzenButton>

</RadzenStack>

@code
{
    [Parameter]
    public AnswerOptionViewModel AnswerModel { get; set; } = new();

    [Parameter]
    public EventCallback<AnswerOptionViewModel> RemoveItemCallback { get; set; }

    [Parameter]
    public string TextInputLabel { get; set; } = "Option";
    public string ChkTooltip => AnswerModel.IsAnswer ? "You marked it as answer." : "Click if it's an answer.";

    private string[] ansTypes = { "Short Text", "Paragraph", "Image", "Audio", "Video" };
    public string selectedAnsType = "Short Text";

    private async Task RemoveItem()
    {
        await RemoveItemCallback.InvokeAsync(AnswerModel);
    }

    private void ShowTooltip(ElementReference elementReference, TooltipOptions options = null)
    {
        tooltipService.Open(elementReference, ChkTooltip, options);
    }
}
