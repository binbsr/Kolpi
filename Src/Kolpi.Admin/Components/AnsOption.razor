@using Kolpi.WebShared.ViewModels

@inject TooltipService tooltipService

<RadzenRow JustifyContent="JustifyContent.Right" AlignItems="AlignItems.Center" Gap="1rem" Style="width: 100%;">
    <RadzenColumn class="rz-text-align-left">
        <RadzenLabel Text="Answer" Component="@TextInputLabel" Style="margin-right: 4px; vertical-align: middle;" />
        <RadzenCheckBox Name="@TextInputLabel" @bind-Value=@AnswerModel.IsAnswer MouseEnter="@(args => ShowTooltip(args, new TooltipOptions(){ Position = TooltipPosition.Top }))" />
    </RadzenColumn>
    <RadzenColumn Size="8" class="rz-text-align-left">
        <RadzenFormField Text="@TextInputLabel" Style="width: 100%;">
            <RadzenTextBox @bind-Value="@AnswerModel.Body" Style="width: 100%;" />
        </RadzenFormField>
    </RadzenColumn>
    <RadzenColumn Size="2" class="rz-text-align-left">
        <RadzenFormField Variant="@Variant.Outlined" Style="width: 100%;">
            <RadzenDropDown Data=@ansTypes @bind-Value="@selectedAnsType" AllowClear="@true" Placeholder="Select answer type" Style="width: 100%;" />
        </RadzenFormField>

    </RadzenColumn>
    <RadzenColumn class="rz-text-align-right">
        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="RemoveItem"></RadzenButton>
    </RadzenColumn>
</RadzenRow>

@code
{
    [Parameter]
    public AnswerOptionViewModel AnswerModel { get; set; } = new();

    [Parameter]
    public EventCallback<AnswerOptionViewModel> RemoveItemCallback { get; set; }

    [Parameter]
    public string TextInputLabel { get; set; } = "Option";
    public string ChkTooltip => AnswerModel.IsAnswer ? "You marked it as answer." : "Click if it's an answer.";

    private string[] ansTypes = { "Text", "Image", "Audio", "Video" };
    private string selectedAnsType = "Text";

    private async Task RemoveItem()
    {
        await RemoveItemCallback.InvokeAsync(AnswerModel);
    }

    private void ShowTooltip(ElementReference elementReference, TooltipOptions options = null)
    {
        tooltipService.Open(elementReference, ChkTooltip, options);
    }
}
