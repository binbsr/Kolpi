@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <Dropdown Placement="@Placement.BottomRight"
                  Trigger="@(new Trigger[] { Trigger.Click })">
            <Overlay>
                <Menu>
                    <MenuItem>
                        <h4>@GetUserName(context.User.Identity.Name)</h4>
                    </MenuItem>
                    <MenuItem>
                        <a href="authentication/profile">Your Account</a>
                    </MenuItem>
                    <MenuItem>
                        <a href="#">Your Profile</a>
                    </MenuItem>
                    <MenuItem>
                        <a href="#">Your Privileges</a>
                    </MenuItem>
                    <MenuItem>
                        <Button Type="dashed" Danger Block @onclick="BeginSignOut" Icon="user">Logout</Button>
                    </MenuItem>
                </Menu>
            </Overlay>
            <ChildContent>
                <Avatar Shape="square" Size="large" Src="img/me.jpg" />
            </ChildContent>
        </Dropdown>
    </Authorized>
    <NotAuthorized>
        <Menu Mode="MenuMode.Horizontal" Theme="MenuTheme.Dark">
            <MenuItem>
                <a href="authentication/register">Register</a>
            </MenuItem>
            <MenuItem>
                <a href="authentication/login">Login</a>
            </MenuItem>
        </Menu>
    </NotAuthorized>
</AuthorizeView>

@code{

    private string GetUserName(string email) =>
        email?.Substring(0, email?.LastIndexOf("@") ?? 0);


    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
