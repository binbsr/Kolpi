@page "/tagtypes/index"

@inject HttpClient http
@inject ModalService modalService

@using Kolpi.Shared.ViewModels
@using Kolpi.Client.Components.Results

<p>Total @_total Records <a href="/tagtypes/add" style="float:right"><Icon Type="plus"></Icon>Add Tagtype</a></p>

@if (tagTypeViewModels.Any())
{
    <Table @ref="table" HidePagination="true"
           DataSource="@tagTypeViewModels">

        <Column @bind-Field="@context.Name" />
        <Column @bind-Field="@context.ColorCode" />
        <Column @bind-Field="@context.Details" />

        <ActionColumn Title="Action">
            <Space Size="middle">
                <SpaceItem>
                    <Button Type="dashed" Shape="circle">
                        <a href="/tagtypes/edit/@context.Id"><Icon Type="edit"></Icon></a>
                    </Button>
                </SpaceItem>
                <SpaceItem>
                    <Button Icon="delete" Shape="circle" Type="dashed" OnClick="(e) => ConfirmDelete(context)"></Button>
                </SpaceItem>
            </Space>
        </ActionColumn>
    </Table>
}
else
{
    <EmptyResult Explanation="No tagtypes added yet." />
}

@code {
    List<TagTypeViewModel> tagTypeViewModels = new List<TagTypeViewModel>();
    ITable table;
    int _total = 0;

    protected override async Task OnInitializedAsync()
    {
        tagTypeViewModels = await GetTagTypesAsync();
        _total = tagTypeViewModels.Count;
    }

    public Task<List<TagTypeViewModel>> GetTagTypesAsync()
    {
        return http.GetFromJsonAsync<List<TagTypeViewModel>>("api/tagtypes");
    }

    private async Task ConfirmDelete(TagTypeViewModel tagTypeViewModel)
    {
        RenderFragment icon =@<Icon Type="exclamation-circle" Theme="outline"></Icon>;

        await modalService.Confirm(new ConfirmOptions()
        {
            Title = "Tagtype Delete",
            Icon = icon,
            Content = "Do you want to delete this item?",
            OnOk = (e) => http.DeleteAsync($"api/tagtypes/{tagTypeViewModel.Id}"),
            OkText = $"Delete {tagTypeViewModel.Name}"
        });
    }    
}
